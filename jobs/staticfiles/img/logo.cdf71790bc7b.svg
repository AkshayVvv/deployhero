<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" version="1.1" width="512" height="512" x="0" y="0" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512" xml:space="preserve" class=""><circle r="256" cx="256" cy="256" fill="#199aff" shape="circle" transform="matrix(0.73,0,0,0.73,69.12,69.12)"/><g transform="matrix(0.7,0,0,0.7,76.80000000000001,76.80000000000001)"><script id="metastreaminitscript">(function() {
    document.getElementById('metastreaminitscript').remove()

    const INIT_TIMEOUT = 5e3
    const isFirefox = navigator.userAgent.toLowerCase().includes('firefox')

    //=========================================================================
    // document.createElement proxy
    //=========================================================================

    window.__metastreamMediaElements = new Set()

    // Proxy document.createElement to trap media elements created in-memory
    const origCreateElement = document.createElement
    const proxyCreateElement = function() {
      const element = origCreateElement.apply(document, arguments)
      if (window.__metastreamMediaElements &amp;&amp; element instanceof HTMLMediaElement) {
        window.__metastreamMediaElements.add(element)
      }
      return element
    }
    proxyCreateElement.toString = origCreateElement.toString.bind(origCreateElement)
    document.createElement = proxyCreateElement

    setTimeout(() =&gt; {
      if (window.__metastreamMediaElements) {
        window.__metastreamMediaElements.clear()
        window.__metastreamMediaElements = undefined
      }
    }, INIT_TIMEOUT)

    //=========================================================================
    // navigator.mediaSession proxy (Firefox)
    //=========================================================================

    if (isFirefox) {
      // stub out MediaSession API until Firefox supports this natively
      if (!navigator.mediaSession) {
        const noop = () =&gt; {}
        const mediaSessionStub = {
          __installedByMetastreamRemote__: true,
          setActionHandler: noop
        }
        Object.defineProperty(window.navigator, 'mediaSession', {
          value: mediaSessionStub,
          enumerable: false,
          writable: true
        })

        function MediaMetadata(metadata) {
          Object.assign(this, metadata)
        }
        window.MediaMetadata = MediaMetadata
      }

      const { mediaSession } = navigator

      // Capture action handlers for player.js proxy
      mediaSession._handlers = {}

      const _setActionHandler = mediaSession.setActionHandler
      mediaSession.setActionHandler = function(name, handler) {
        mediaSession._handlers[name] = handler
        _setActionHandler.apply(mediaSession, arguments)
      }
    }

    //=========================================================================
    // document.domain fix (Firefox)
    //=========================================================================

    if (isFirefox) {
      const domains = ['twitch.tv', 'crunchyroll.com']

      // Fix for setting document.domain in sandboxed iframe
      try {
        const { domain } = document
        if (domain &amp;&amp; domains.some(d =&gt; domain.includes(d))) {
          Object.defineProperty(document, 'domain', {
            value: domain,
            writable: true
          })
        }
      } catch (e) {}
    }

    //=========================================================================
    // Inline script embed prevention fix
    //=========================================================================

    const observeScripts = () =&gt; {
      const scriptSnippets = [
        { code: 'window.top !== window.self', replacement: 'false' },
        { code: 'self == top', replacement: 'true' },
        { code: 'top.location != window.location', replacement: 'false' }
      ]

      const getAddedScripts = mutationList =&gt;
        mutationList.reduce((scripts, mutation) =&gt; {
          if (mutation.type !== 'childList') return scripts
          const inlineScripts = Array.from(mutation.addedNodes).filter(
            node =&gt; node instanceof HTMLScriptElement &amp;&amp; node.textContent.length &gt; 0
          )
          return inlineScripts.length &gt; 0 ? [...scripts, ...inlineScripts] : scripts
        }, [])

      // Modifies inline scripts to allow embedding content in iframe
      const inlineScriptModifier = mutationsList =&gt; {
        const scripts = getAddedScripts(mutationsList)
        for (let script of scripts) {
          for (let snippet of scriptSnippets) {
            if (script.textContent.includes(snippet.code)) {
              script.textContent = script.textContent.split(snippet.code).join(snippet.replacement)
            }
          }
        }
      }

      const observer = new MutationObserver(inlineScriptModifier)
      observer.observe(document.documentElement, { childList: true, subtree: true })

      // Stop watching for changes after we finish loading
      window.addEventListener('load', () =&gt; observer.disconnect())
    }

    observeScripts()
  }());</script>
<circle xmlns="http://www.w3.org/2000/svg" style="" cx="256" cy="256" r="256" fill="#f2f2f2" data-original="#f2f2f2" class=""/>
<circle xmlns="http://www.w3.org/2000/svg" style="" cx="214.03" cy="233.72" r="200.82" fill="#1da2f8" data-original="#1da2f8" class=""/>
<path xmlns="http://www.w3.org/2000/svg" style="" d="M498.033,339.601c0,0,0.01,0,0,0.01c-27.982,81.042-95.535,143.642-179.555,164.707  c-13.312-5.475-25.558-13.019-36.321-22.246c-28.808-24.67-47.062-61.304-47.062-102.212c0-7.91,0.679-15.673,1.996-23.207  c3.845-22.131,13.103-42.402,26.352-59.413c24.628-31.598,63.039-51.911,106.193-51.911c33.896,0,64.867,12.539,88.524,33.228  C476.56,294.65,490.541,315.684,498.033,339.601z" fill="#ff474e" data-original="#ff474e" class=""/>
<path xmlns="http://www.w3.org/2000/svg" style="" d="M289.565,444.363c0,13.354-2.633,26.081-7.408,37.71c-4.535,11.086-11.013,21.17-19.038,29.821  c-2.361,0.073-4.733,0.104-7.116,0.104c-62.966,0-120.623-22.727-165.209-60.437c-0.178-2.382-0.261-4.775-0.261-7.199  c0-54.962,44.554-99.516,99.516-99.516c17.011,0,33.029,4.274,47.041,11.807C268.322,373.435,289.565,406.412,289.565,444.363z" fill="#8a60cc" data-original="#8a60cc" class=""/>
<circle xmlns="http://www.w3.org/2000/svg" style="" cx="349.87" cy="173.94" r="150.57" fill="#ffd11f" data-original="#ffd11f" class=""/>
<path xmlns="http://www.w3.org/2000/svg" style="" d="M413.932,252.819c16.433,5.709,31.399,14.519,44.221,25.737  c-16.819,17.421-37.802,30.783-61.364,38.482C405.878,297.164,411.803,275.547,413.932,252.819z" fill="#ff2c40" data-original="#ff2c40" class=""/>
<path xmlns="http://www.w3.org/2000/svg" style="" d="M413.932,252.819c-2.129,22.728-8.054,44.344-17.143,64.218c-14.766,4.86-30.535,7.468-46.906,7.468  c-32.17,0-61.966-10.076-86.437-27.264c24.61-31.584,63.03-51.905,106.187-51.905C385.156,245.336,400.061,247.958,413.932,252.819z  " fill="#e23b49" data-original="#e23b49" class=""/>
<path xmlns="http://www.w3.org/2000/svg" style="" d="M276.068,42.667c80.543,26.138,138.774,101.79,138.774,191.05c0,6.449-0.308,12.822-0.91,19.102  c-13.871-4.861-28.776-7.484-44.298-7.484c-43.156,0-81.576,20.321-106.187,51.905c-38.79-27.233-64.141-72.304-64.141-123.298  C199.305,117.594,230.242,68.481,276.068,42.667z" fill="#55a213" data-original="#55a213" class=""/>
<path xmlns="http://www.w3.org/2000/svg" style="" d="M286.791,420.956c-13.116,5.107-26.894,8.872-41.182,11.125  c-6.774-16.062-10.507-33.698-10.507-52.214c0-7.915,0.679-15.677,1.991-23.222C261.703,369.868,280.095,393.137,286.791,420.956z" fill="#c04061" data-original="#c04061"/>
<path xmlns="http://www.w3.org/2000/svg" style="" d="M282.162,482.088c-15.77-13.501-28.375-30.597-36.553-50.008  c14.288-2.253,28.067-6.018,41.181-11.125c1.82,7.514,2.777,15.353,2.777,23.407C289.568,457.709,286.946,470.454,282.162,482.088z" fill="#c63640" data-original="#c63640" class=""/>
<path xmlns="http://www.w3.org/2000/svg" style="" d="M263.446,297.241c24.471,17.189,54.266,27.264,86.437,27.264c16.37,0,32.14-2.608,46.906-7.468  c-21.648,47.415-61.194,84.94-109.999,103.918c-6.697-27.819-25.089-51.087-49.698-64.31  C240.95,334.519,250.192,314.245,263.446,297.241z" fill="#e34d6a" data-original="#e34d6a" class=""/>
<path xmlns="http://www.w3.org/2000/svg" style="" d="M190.047,344.841c17.019,0,33.034,4.274,47.045,11.804c-1.311,7.545-1.991,15.307-1.991,23.222  c0,18.516,3.734,36.151,10.507,52.214c-10.291,1.621-20.83,2.469-31.584,2.469c-41.891,0-80.774-12.822-112.961-34.763  C117.405,367.199,151.118,344.841,190.047,344.841z" fill="#7641f3" data-original="#7641f3" class=""/>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
</g></svg>
